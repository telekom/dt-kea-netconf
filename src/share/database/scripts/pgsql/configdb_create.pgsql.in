-- (C) 2020 Deutsche Telekom AG.
--
-- Deutsche Telekom AG and all other contributors /
-- copyright owners license this file to you under the Apache
-- License, Version 2.0 (the "License"); you may not use this
-- file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations
-- under the License.

-- This is the Kea DHCP schema specification for PostgreSQL.
--
-- The schema is reasonably portable (with the exception of some field types
-- specification, which are PostgreSQL-specific).  Minor changes might be needed
-- for other databases.
--
-- To create the schema, either type the command:
--
-- psql -U <user> -W <password> <database> < configdb_create.pgsql
--
-- ... at the command prompt, or log in to the PostgreSQL database and at the "postgres=#"
-- prompt, issue the command:
--
-- @configdb_create.pgsql

-- Start a single transaction for the entire script.
START TRANSACTION;

-- This line starts database upgrade to version 1.0.

--------------------------------------------------------------------------------
--------------------------------- DHCPv4 space ---------------------------------
--------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS server_configuration4 (
  config_id VARCHAR(36) NOT NULL,
  timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
  json_data BYTEA NOT NULL,
  generic_data BYTEA NOT NULL,
  PRIMARY KEY (config_id)
);

CREATE TABLE IF NOT EXISTS subnet4 (
-- common
    id INT NOT NULL,
    renew_timer BIGINT NOT NULL,
    rebind_timer BIGINT NOT NULL,
    valid_lifetime BIGINT NOT NULL,
    allocation_type SMALLINT NOT NULL,
    client_class VARCHAR NOT NULL,
    interface VARCHAR NOT NULL,
    interface_id VARCHAR NOT NULL,
    option_data_list VARCHAR NOT NULL,
    pools_list VARCHAR NOT NULL,
    rapid_commit SMALLINT NOT NULL,
    relay VARCHAR NOT NULL,
    require_client_classes VARCHAR NOT NULL,
    reservations VARCHAR NOT NULL,
    reservation_mode SMALLINT NOT NULL,
    subnet VARCHAR NOT NULL,
    user_context VARCHAR NOT NULL,
-- v4
    boot_file_name VARCHAR NOT NULL,
    match_client_id SMALLINT NOT NULL,
    next_server VARCHAR NOT NULL,
    server_hostname VARCHAR NOT NULL,
    subnet_4o6_interface VARCHAR NOT NULL,
    subnet_4o6_interface_id VARCHAR NOT NULL,
    subnet_4o6_subnet VARCHAR NOT NULL,
    subnet_v4_psid_offset SMALLINT NOT NULL,
    subnet_v4_psid_len SMALLINT NOT NULL,
    subnet_v4_excluded_psids VARCHAR NOT NULL,
    PRIMARY KEY (subnet)
);


--------------------------------------------------------------------------------
--------------------------------- DHCPv6 space ---------------------------------
--------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS server_configuration6 (
  config_id VARCHAR(36) NOT NULL,
  timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
  json_data BYTEA NOT NULL,
  generic_data BYTEA NOT NULL,
  PRIMARY KEY (config_id)
);

CREATE TABLE IF NOT EXISTS subnet6 (
-- common
    id INT NOT NULL,
    renew_timer BIGINT NOT NULL,
    rebind_timer BIGINT NOT NULL,
    valid_lifetime BIGINT NOT NULL,
    allocation_type SMALLINT NOT NULL,
    client_class VARCHAR NOT NULL,
    interface VARCHAR NOT NULL,
    interface_id VARCHAR NOT NULL,
    option_data_list VARCHAR NOT NULL,
    pools_list VARCHAR NOT NULL,
    rapid_commit SMALLINT NOT NULL,
    relay VARCHAR NOT NULL,
    require_client_classes VARCHAR NOT NULL,
    reservations VARCHAR NOT NULL,
    reservation_mode SMALLINT NOT NULL,
    subnet VARCHAR NOT NULL,
    user_context VARCHAR NOT NULL,
-- v6
    pd_pools_list VARCHAR NOT NULL,
    preferred_lifetime BIGINT NOT NULL,
    PRIMARY KEY (subnet)
);


--------------------------------------------------------------------------------
--------------------------------- Common space ---------------------------------
--------------------------------------------------------------------------------
-- Finally, the version of the schema.  We start at 0.1 during development.
-- This table is only modified during schema upgrades.  For historical reasons
-- (related to the names of the columns in the BIND 10 DNS database file), the
-- first column is called "version" and not "major".
CREATE TABLE IF NOT EXISTS config_schema_version (
    version INT PRIMARY KEY NOT NULL,       -- Major version number
    minor INT                               -- Minor version number
);

-- Set 1.0 schema version.
INSERT INTO config_schema_version VALUES (1, 0);

-- This line concludes database upgrade to version 1.0.

-- This line starts database upgrade to version 2.0.

ALTER TABLE subnet4 ADD timestamp BIGINT NOT NULL;
ALTER TABLE subnet6 ADD timestamp BIGINT NOT NULL;

UPDATE config_schema_version
    SET version = 2, minor = 0
    WHERE version = 1 AND minor = 0;

-- This line concludes database upgrade to version 2.0.

-- Commit the script transaction.
COMMIT;
