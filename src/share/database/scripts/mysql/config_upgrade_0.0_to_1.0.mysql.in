# (C) 2020 Deutsche Telekom AG.
#
# Deutsche Telekom AG and all other contributors /
# copyright owners license this file to you under the Apache
# License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This is the Kea schema specification for Cassandra CQL.
#
# The schema is reasonably portable (with the exception of the engine
# specification, which is Cassandra CQL-specific).  Minor changes might be needed for
# other databases.

# To create the schema, either type the command:
#
# mysql -u <user> -p <password> <database> < configdb_upgrade_0.0_to_1.0.mysql
#
# ... at the command prompt, or log in to the MySQL database and at the 'mysql>'
# prompt, issue the command:
#
# source configdb_upgrade_0.0_to_1.0.mysql
#
# This script is also called from kea-admin, see kea-admin db-init mysql
#
# Over time, Kea database schema will evolve. Each version is marked with
# major.minor version. This file is organized sequentially, i.e. database
# is initialized to 1.0, then upgraded to 2.0 etc. This may be somewhat
# sub-optimal, but it ensues consistency with upgrade scripts. (It is much
# easier to maintain init and upgrade scripts if they look the same).
# Since initialization is done only once, it's performance is not an issue.

#
# Create table holding server DCHPv4 configuration
#
CREATE TABLE IF NOT EXISTS server_configuration4 (
  config_id VARCHAR(36) NOT NULL,
  timestamp TIMESTAMP NOT NULL,
  json_data LONGTEXT NOT NULL,
  generic_data LONGTEXT NOT NULL,
  PRIMARY KEY (config_id)
) ENGINE=InnoDB;

#
# Create table holding server DCHPv6 configuration
#
CREATE TABLE IF NOT EXISTS server_configuration6 (
  config_id VARCHAR(36) NOT NULL,
  timestamp TIMESTAMP NOT NULL,
  json_data LONGTEXT NOT NULL,
  generic_data LONGTEXT NOT NULL,
  PRIMARY KEY (config_id)
) ENGINE=InnoDB;

# Finally, the version of the schema.  We start at 1.0 during development.
# This table is only modified during schema upgrades.  For historical reasons
# (related to the names of the columns in the BIND 10 DNS database file), the
# first column is called "version" and not "major".
CREATE TABLE IF NOT EXISTS config_schema_version (
    version INT PRIMARY KEY NOT NULL,       # Major version number
    minor INT                               # Minor version number
    ) ENGINE = INNODB;

#ifdef TERASTREAM

ALTER TABLE lease4
    ADD COLUMN privacy_expire TIMESTAMP NULL DEFAULT NULL;

ALTER TABLE lease6
    ADD COLUMN privacy_expire TIMESTAMP NULL DEFAULT NULL;

ALTER TABLE lease4
    ADD COLUMN privacy_hash VARBINARY(128);

ALTER TABLE lease6
    ADD COLUMN privacy_hash VARBINARY(128);

ALTER TABLE lease4
    ADD COLUMN privacy_history LONGTEXT;

ALTER TABLE lease6
    ADD COLUMN privacy_history LONGTEXT;

ALTER TABLE lease4
    ADD COLUMN sw_4o6_src_address VARCHAR(39) NOT NULL;

#endif  // TERASTREAM

# Update the schema version number
INSERT INTO config_schema_version VALUES (1, 0);
# This line concludes database upgrade to version 1.0.
