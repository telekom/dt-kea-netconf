# (C) 2020 Deutsche Telekom AG.
#
# Deutsche Telekom AG and all other contributors /
# copyright owners license this file to you under the Apache
# License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This is the Kea schema specification for Cassandra CQL.
#
# The schema is reasonably portable (with the exception of the engine
# specification, which is Cassandra CQL-specific).  Minor changes might be needed for
# other databases.

# To create the schema, either type the command:
#
# mysql -u <user> -p <password> <database> < configdb_create.mysql
#
# ... at the command prompt, or log in to the MySQL database and at the 'mysql>'
# prompt, issue the command:
#
# source configdb_create.mysql
#
# This script is also called from kea-admin, see kea-admin db-init mysql
#
# Over time, Kea database schema will evolve. Each version is marked with
# major.minor version. This file is organized sequentially, i.e. database
# is initialized to 1.0, then upgraded to 2.0 etc. This may be somewhat
# sub-optimal, but it ensues consistency with upgrade scripts. (It is much
# easier to maintain init and upgrade scripts if they look the same).
# Since initialization is done only once, it's performance is not an issue.

# This line starts database upgrade to version 1.0.

################################################################################
################################# DHCPv4 space #################################
################################################################################
CREATE TABLE IF NOT EXISTS server_configuration4 (
    config_id VARCHAR(36) NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    json_data LONGTEXT NOT NULL,
    generic_data LONGTEXT NOT NULL,
    PRIMARY KEY (config_id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS subnet4 (
# common
    id INT NOT NULL,
    renew_timer BIGINT NOT NULL,
    rebind_timer BIGINT NOT NULL,
    valid_lifetime BIGINT NOT NULL,
    option_data_list LONGTEXT NOT NULL,
    pools_list LONGTEXT NOT NULL,
    subnet VARCHAR(18) NOT NULL,
    interface LONGTEXT NOT NULL,
    interface_id LONGTEXT NOT NULL,
    rapid_commit TINYINT NOT NULL,
    client_class LONGTEXT NOT NULL,
    require_client_classes LONGTEXT NOT NULL,
    reservations LONGTEXT NOT NULL,
    reservation_mode TINYINT NOT NULL,
    relay LONGTEXT NOT NULL,
    allocation_type TINYINT NOT NULL,
    user_context LONGTEXT NOT NULL,
# v4
    match_client_id TINYINT NOT NULL,
    next_server LONGTEXT NOT NULL,
    server_hostname LONGTEXT NOT NULL,
    boot_file_name LONGTEXT NOT NULL,
    subnet_4o6_interface LONGTEXT NOT NULL,
    subnet_4o6_interface_id LONGTEXT NOT NULL,
    subnet_4o6_subnet LONGTEXT NOT NULL,
    subnet_v4_psid_offset TINYINT NOT NULL,
    subnet_v4_psid_len TINYINT NOT NULL,
    subnet_v4_excluded_psids LONGTEXT NOT NULL,
    PRIMARY KEY (subnet)
) ENGINE=InnoDB;


################################################################################
################################# DHCPv6 space #################################
################################################################################
CREATE TABLE IF NOT EXISTS server_configuration6 (
    config_id VARCHAR(36) NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    json_data LONGTEXT NOT NULL,
    generic_data LONGTEXT NOT NULL,
    PRIMARY KEY (config_id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS subnet6 (
# common
    id INT NOT NULL,
    renew_timer BIGINT NOT NULL,
    rebind_timer BIGINT NOT NULL,
    valid_lifetime BIGINT NOT NULL,
    option_data_list LONGTEXT NOT NULL,
    pools_list LONGTEXT NOT NULL,
    subnet VARCHAR(43) NOT NULL,
    interface LONGTEXT NOT NULL,
    interface_id LONGTEXT NOT NULL,
    rapid_commit TINYINT NOT NULL,
    client_class LONGTEXT NOT NULL,
    require_client_classes LONGTEXT NOT NULL,
    reservations LONGTEXT NOT NULL,
    reservation_mode TINYINT NOT NULL,
    relay LONGTEXT NOT NULL,
    allocation_type TINYINT NOT NULL,
    user_context LONGTEXT NOT NULL,
# v6
    pd_pools_list LONGTEXT NOT NULL,
    preferred_lifetime BIGINT NOT NULL,
    PRIMARY KEY (subnet)
) ENGINE=InnoDB;


################################################################################
################################# Common space #################################
################################################################################
# Finally, the version of the schema.  We start at 1.0 during development.
# This table is only modified during schema upgrades.  For historical reasons
# (related to the names of the columns in the BIND 10 DNS database file), the
# first column is called "version" and not "major".
CREATE TABLE IF NOT EXISTS config_schema_version (
    version INT PRIMARY KEY NOT NULL,       # Major version number
    minor INT                               # Minor version number
) ENGINE = InnoDB;

# Update the schema version number
INSERT INTO config_schema_version VALUES (1, 0);

# This line concludes database upgrade to version 1.0.

# This line starts database upgrade to version 2.0.

ALTER TABLE subnet4 ADD timestamp BIGINT;
ALTER TABLE subnet6 ADD timestamp BIGINT;

UPDATE config_schema_version
    SET version = 2, minor = 0
    WHERE version = 1 AND minor = 0;

# This line concludes database upgrade to version 2.0.
