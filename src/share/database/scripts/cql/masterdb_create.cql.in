-- (C) 2020 Deutsche Telekom AG.
--
-- Deutsche Telekom AG and all other contributors /
-- copyright owners license this file to you under the Apache
-- License, Version 2.0 (the "License"); you may not use this
-- file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- This is the Kea schema specification for Cassandra CQL.
--
-- The schema is reasonably portable (with the exception of the engine
-- specification, which is Cassandra CQL-specific).  Minor changes might be needed for
-- other databases.

-- To create the schema, either type the command:
--
-- cqlsh -u <user> -p <password> -k <database> -f masterdb_create.cql
--
-- ... at the command prompt, or log in to the CQL database and at the "cqlsh>"
-- prompt, issue the command:
--
-- SOURCE masterdb_create.cql
--
-- This script is also called from kea-admin, see kea-admin db-init cql
--
-- Over time, Kea database schema will evolve. Each version is marked with
-- major.minor version. This file is organized sequentially, i.e. database
-- is initialized to 1.0, then upgraded to 2.0 etc. This may be somewhat
-- sub-optimal, but it ensues consistency with upgrade scripts. (It is much
-- easier to maintain init and upgrade scripts if they look the same).
-- Since initialization is done only once, it's performance is not an issue.

-- -----------------------------------------------------
-- Table `server_configuration4`
-- -----------------------------------------------------
CREATE TABLE server_configuration4 (
    instance_id VARCHAR,
    database_credentials VARCHAR,
    shard VARCHAR,
    server_specific_configuration VARCHAR,
    timestamp BIGINT,
    PRIMARY KEY ((instance_id))
);

-- Create search indexes for server_configuration4 table
CREATE INDEX IF NOT EXISTS server_configuration4index1 ON server_configuration4 (shard);

-- -----------------------------------------------------
-- Table `server_configuration6`
-- -----------------------------------------------------
CREATE TABLE server_configuration6 (
    instance_id VARCHAR,
    database_credentials VARCHAR,
    shard VARCHAR,
    server_specific_configuration VARCHAR,
    timestamp BIGINT,
    PRIMARY KEY ((instance_id))
);

-- Create search indexes for server_configuration6 table
CREATE INDEX IF NOT EXISTS server_configuration6index1 ON server_configuration6 (shard);

-- Finally, the version of the schema.  We start at 1.0 during development.
-- This table is only modified during schema upgrades.  For historical reasons
-- (related to the names of the columns in the BIND 10 DNS database file), the
-- first column is called "version" and not "major".
CREATE TABLE master_schema_version (
    key VARCHAR,
    version INT,
    minor INT,
    PRIMARY KEY ((version, minor))
);

INSERT INTO master_schema_version (key, version, minor) VALUES ('version', 1, 0);
